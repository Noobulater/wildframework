ballistics = ballistics or {}

ballistics.materials = {}
-- Metrocop head
ballistics.materials[45] 				= {particle = "blood_impact_red_01", property = 39}
ballistics.materials[MAT_ANTLION] 		= {particle = "impact",				 property = 41}
ballistics.materials[MAT_BLOODYFLESH] 	= {particle = "blood_impact_red_01", property = 39}
ballistics.materials[MAT_CONCRETE] 		= {particle = "impact", 			 property = 24}
--ballistics.materials[MAT_NODRAW] 		= {particle = "impact", 			 property = 9}
ballistics.materials[MAT_DIRT] 			= {particle = "impact", 			 property = 9}
ballistics.materials[MAT_FLESH] 		= {particle = "blood_impact_red_01", property = 39}
ballistics.materials[MAT_GRATE] 		= {particle = "impact", 			 property = 38}
ballistics.materials[MAT_ALIENFLESH] 	= {particle = "impact", 			 property = 41}
ballistics.materials[MAT_CLIP] 			= {particle = "impact", 			 property = 4}
ballistics.materials[MAT_PLASTIC] 		= {particle = false, 				 property = 68}
ballistics.materials[MAT_METAL] 		= {particle = "impact", 			 property = 4}
ballistics.materials[MAT_SAND] 			= {particle = "impact", 			 property = 94}
ballistics.materials[MAT_FOLIAGE] 		= {particle = "impact", 			 property = 94}
ballistics.materials[MAT_COMPUTER] 		= {particle = "impact", 			 property = 29}
ballistics.materials[MAT_SLOSH] 		= {particle = "slime_splash_01", 	 property = 22}
ballistics.materials[MAT_TILE] 			= {particle = "impact", 			 property = 13}
ballistics.materials[MAT_VENT] 			= {particle = "impact", 			 property = 2}
ballistics.materials[MAT_WOOD] 			= {particle = "impact", 			 property = 16}
ballistics.materials[MAT_GLASS] 		= {particle = "impact", 			 property = 63}
--ManhackCut Scorch SmallScorch Blood BulletProof ExplosiveGunshot FadingScorch GlassBreak

-- 28, 100 glass
-- 63 small glass
-- 39 blood
-- 40 green
-- 41 yellow
-- 98 egg
-- 94 sand
-- 13 ceramic
-- 22-23 slosh
-- 29 computer
-- 38 fence
-- 70, 71 small metal
-- 83 hard impact
-- 95 big break
-- 68, 72 plastic
-- 74 plastic hollow
-- 9-12 dirt
-- 14-21 wood
-- 42 metal2
-- 1, 3-5, 8 metal
-- 2, 7 vent
-- 0, 24 crete

-- local curEffect = 0
local function fireImpactFX(traceInfo)
	local balistic = ballistics.materials[traceInfo.MatType]

	--if balistic.decal then util.TraceDecal(traceInfo, balistic.decal) end

	local effectdata = EffectData()
	effectdata:SetStart(traceInfo.StartPos)
	effectdata:SetOrigin(traceInfo.HitPos)
	effectdata:SetNormal(traceInfo.HitNormal)
	effectdata:SetSurfaceProp(balistic.property or 0)
	effectdata:SetEntity(traceInfo.Entity)

	util.Effect("impact", effectdata)

	-- print("-- " .. curEffect .. " ")
	-- curEffect = curEffect + 1
	-- if curEffect > 100 then
	-- 	curEffect = 0
	-- end
end


function ballistics.impact(traceInfo, bullet)
	if not traceInfo.HitSky then
		-- Make hole and effects
		fireImpactFX(traceInfo)
		-- Check to see if the bullet made it through
		ballistics.penetrate(traceInfo, bullet)
	end
end

function ballistics.penetrate(traceInfo, bullet)
	local penDepth = 64
	local penNormal = bullet.velocity:GetNormal()
	local testPoint = traceInfo.HitPos + penNormal * penDepth
	local pointCont = util.PointContents(testPoint)

	if bit.band(bit.bor(CONTENTS_EMPTY, CONTENTS_TESTFOGVOLUME), pointCont) == pointCont then
		local tracedata = {}
		tracedata.start = testPoint
		tracedata.endpos = testPoint + penNormal * -penDepth
		tracedata.filter = {}
		--tracedata.mask = MASK_SHOT + MASK_WATER
		local backTraceInfo = util.TraceLine(tracedata)
		--PrintTable(backTraceInfo)

		if backTraceInfo.Hit and not backTraceInfo.HitSky then

			-- Make exit hole and effects
			fireImpactFX(backTraceInfo)
			-- Fire bullet out the new hole
			util.FireRealBulletEx(bullet.ply, bullet.velocity * 0.1, backTraceInfo.HitPos, {backTraceInfo.Entity}, bullet.type)
		end
	end
end